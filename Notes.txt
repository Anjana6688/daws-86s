:### All session information
In session 2 it creates keypairs,firewall : secruity groups(inbound)
### how to connect with ip
username 3.25.173.18
ssh -i <private-key> ec2-user@ip
ssh -i daws-86s ec2-user@3.25.173.18
In normal ssh root@10.36.63.1

/c/devops/daws-86s -> absolute path. starts from root directory
daws-86s  --> relative. make sure you have that file exist file

SESSION -6:
=============================================================================================================================================================
process Management:
===================
ls -l -> Suppose if you give ls -l command and then it will initiate one process and assign ID, i,e PID(Process Instance ID) and display the result.

TL -> assigned task to Senior Engineer
TL is his parent for that task, Senior Engineer is Child

TL creates one process and his process ID PPID (Parent process Instance ID)
TL assigns this to Senior Engineer. PID(Process Instance ID)

ps -->process started by the current user.
If you give sleep 10 means the system will not respond untill 10 sec if you give any commands it wont showw untill 10secs completed after that it will show.
[ ec2-user@ip-172-31-19-109 ~ ]$ sleep 10
grndsnmsd
grep
grep *

There are two process:
1. Foreground --> Blocks the current screen will not allow to do anything. - Runs directly in the terminal and occupies it until completion.
Example: - ls  This command lists directory contents and runs in the foreground.

2. Background -->Runs behind the scenes, allowing you to continue using the terminal.
The below example is sleep 60 & we have used & makes to runs in backround and we can use terminal as well
AnjanaRajasekhar@DESKTOP-NQ5FK5B MINGW64 /c/devops/daws-86s
$ sleep 60 &
[1] 1937
AnjanaRajasekhar@DESKTOP-NQ5FK5B MINGW64 /c/devops/daws-86s
$ pwd
/c/devops/daws-86s

top -->it will give list of all process by monitoring what we will observe?
1. High traffic
10 users, 10% CPU, 25% RAM
100 users, 20% CPU, 40% RAM

2. Problems in application
10 users, 20% CPU, 40% RAM
if a task runs it takes CPU and RAM, if it is completed then it should release CPU and RAM.
Sometime application will not release these resources, then we need to fix the application

fix steps:
1. kill the process first and then restart
2. get all the logs, app logs, server logs, etc..
3. restart the server or application

kill PID -> Request
kill -9 PID --> force kill(demand)

Network Management:
======================
 netstat -ltnp  -- it will give the port details of running or not
 l-->list
t-->tcp(which is related to internet)
n -->it will give port number:
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1252/sshd: /usr/sbi
22 is the port number
p it will give process id.

3 tier architecture:
====================
Desktop vs Webbased Applicationn

Desktop:
if anything is inside your laptop you can't acess anywhere except 
security issues.
storage in local, if crashes no recovery.
no data security.if we lost

Webbased Application
shtorage is cloud based so you can acess anywhere.

Generic based example for 3 tier evloution:
==========================================================

Road side hotel(1 tier)
---------------------
cooking,order management,money collection...(everything is handled by single person)
if crowd is more he can't handle

hotel(2-tier)
--------------
owner and cook is there
 cook has to take the order and cook the food 
if crowd is more handling difficult

Restaurant Model:
==================
Captain -> welcomes the guest and shows them a table
Waiter -> taking order, order management
Chef -> Cooking
Waiter --> Garnish, and delivers the order

even if crowd is more ,everyone has thier individual responsibilites;

Raw format(SQL or NoSQL) -> Application Servers(Java, Python, .NET, NodeJS, Golang) -> Web Servers -> Load Balncer(Captain)

If we put all the database and application,web server in one server them it is (1-tier application)
drawbacks:if traffic is more then servver faces issues the 2 tier evaluvated:
Everything in single server is called as 1 tier application
Database -> Application and Webserver (2 tier)
Database -> Application Server -> Webserver and Load Balancer (3 tier)( 3 different servers)

So they decoupled the 1 and 2 tier applications:

Web Tier/Frontend: 
=====================
load Balancer --> which server is vacant/available it will tell
webserver -->ngnix installed in the webserver and place the web application here the techonologies are HTML,CSS and javscript.
It's main job to display.

Application server/middleware:
=========================================
The code which are accessing database are running in this application tier  so there is would be no security access.
java,.net,python,c++goland,Nodejs.
In application server there are multiple CRUD operations going on how much fast it will do their operation that much fast the server responds.
CRUD
======
1. Create operation ( when customer sign in )
2. Read operation
3. Update operation
4. Delete operation 

Database Tier/backend server :
=======================
It will store the Data its kind of raw data 

MySQL
Oracle
MSSQL
Postgress

MongoDB
Cassandra

Redis

ActiveMQ
Websphere MQ

SESSION:7
===================================================================================================================================================================

We are using Amazon AMI(Amazon Machine Image)
devops-practice
What is Image?
Image is everything around us.
Image =OS+Some required softwares.
suppose if we buy laptop it will preinstalled
Linux id OS or kernel?
==========================
Mac = Hardware+Mac Os
in mac we can't run other OS so they are advertising/selling their harware and OS.
Dell =hardware+anyos (our wish)

Linus Torwvlds completely developed a Kernel from the scratch using C language. 

Kernel = a component that connects with Hardware
OS = Kernel + some utilities or applications for user
popular OS on Linux:
Centos, Fedora, Ubuntu, Android, Oracle Suse, Redhat
The above all took the kernel and developed their individual OS.
 Redhat family
===========================
opensource VS Enterprise
Opensource -> free and community driven. we need to wait for fix
Enterprise -> We pay money for support. if there are defects immidiately we get help
Enterprise = Opensource + Support
Enterprise = Opensource + Support

Redhat = Kernel + Application Utilities + Support

Amazon Linux == Redhat == Centos == Fedora == Almalinux

devops-practice = RHEL based

username=ec2-user 
Password=DevOps321

Project: -Expense
===========================
As we are designing 3-tier,
for databse we are using MYsql
for application server we are using Node Js 

Database/backend tier:
===========================
if any applicaion need database first for we are create database server downlaoding MYsql
Database Server -> it is physical server
Server == Box == Node
We have created a instance in aws named as Database and we need install database server.

MySQL-installation 
====================
Database Linux Server -> Database Server Installation -> Schema/databases -> tables -> Data

Developer has chosen the database MySQL. Hence, we are trying to install it up and configure it.

Versions of the DB Software you will get context from the developer, Meaning we need to check with developer.

Install MySQL Server 8.0.x

dnf install mysql-server -y
Start MySQL Service

systemctl enable mysqld
systemctl start mysqld
Next, We need to change the default root password in order to start using the database service. Use password ExpenseApp@1 or any other as per your choice.

mysql_secure_installation --set-root-pass ExpenseApp@1w211415rraq6ication
We can check data by using client package called mysql.

Usually command to connect mysql server is

mysql -h <host-address> -u root -p<password>
But if your client and server both are in a single server, you can simply issue.

mysql
Once you got mysql prompt, you can use below command to check schemas/databases exist.

show databases;
Once you are in particular schema, you can get the list of tables.

show tables;
You can get entries of a table using

select * from <table_name>;
Application Server:
=============================
dnf is the next version of yum

for devops engineer we need download the code and unzip the code.
and everything we are doing here are devops engineer.

Backend service is responsible for adding the given values to database. Backend service is written in NodeJS, Hence we need to install NodeJS.

Developer has chosen NodeJs, Check with developer which version of NodeJS is needed. Developer has set a context that it can work with NodeJS >20

Install NodeJS, By default NodeJS 16 is available, We would like to enable 20 version and install this.

You can list modules by using dnf module list

dnf module disable nodejs -y
dnf module enable nodejs:20 -y
dnf install nodejs -y
Configure the application.

Add application User

useradd expense
non human user which will not have any password is called system/service user..

User expense is a function / daemon user to run the application. Apart from that we don't use this user to login to server.

Also, username expense has been picked because it more suits to our project name.

We keep application in one standard location. This is a usual practice that runs in the organization.

Lets setup an app directory.

mkdir /app
Download the application code to created app directory.

curl -o /tmp/backend.zip https://expense-joindevops.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
cd /app
unzip /tmp/backend.zip
Every application is developed by development team will have some common softwares that they use as libraries. This application also have the same way of defined dependencies in the application configuration.

Lets download the dependencies.

cd /app

Session:8
==================================================================================================================================================================
devops engineer focus is web tier and application tier.
how the DB server is connect to application server??
We need to through via private IP because it is
1.speed
2.fixed ip

For internal communication we will use private ip(like home and router)
For external communication we use public ip.

Dependencies or libraries:
===============================
Developers used exixting libraries to develop an application
all programming launguages have dependencies.
for nodejs--->package.json (build file) --> here dependencies will be mentoned by developers our application will work if we have these dependencies and project name, description, etc.
for java--> pom.xml(build file)
python -> requirements.txt
.NET -> .sln
go -> build.go
java -> pom.xml
python -> requirements.txt
Lets download the dependencies.

cd /exapp
 npm install
dnf install nginx
systemctl start nginx






Session -18:
==================================================================================================================================================================
Topics Covered in this session:

Automation Goals : 
1.Speed
2.Accuracy
3.no human errors
3.consistency
4.sacalbility,can work for infinte servers 
5.documentation (Everything is recorded what happend includig history)
6.reusability

Where to store Scripts?
If you store it in local device/server what are the consequencies?
1. Secuirty issue,
2.Can't share with others and if server or system crashes we will lose the scripts.
3. version control if we commit changes to the same code then we don't know what inital changes we have done?

To overcome these we use Repositories/version control systems.
Types of version control systems?
1.SVN(Drawbacks is we can push directly to the SVN we can store it in Local)
2.git (It is a concept developed by linus torwarlds and leave it as open source and this is further used by below vendors)
GitHub -->It is also a opensource and it is purchased by Microsoft
Bitbucket
Gitlab

For windows we use git bash.
How to download it in local device?
git clone <Url of the code which you want to download in your Laptop>

AnjanaRajasekhar@DESKTOP-NQ5FK5B MINGW64 /c/devops/daws-86s
$ git clone https://github.com/Anjana6688/Shell-Prac-Daws-86s.git
Cloning into 'Shell-Prac-Daws-86s'...
warning: You appear to have cloned an empty repository.

If we give ls -la command we will find .git hidden files which means its a git repo.
In Git there is a concept called Branching,if we want to do any changes to the existing code instead of applying changes to direct code we can create branches and dummy brnaches we can apply changes and if its wroks fine we will commit to main branch)
IDE tool
eclipse
notepad++
vscode

How code to be push?
vscode -->workspace --> staging area --> commit to local repo --> central repo

what is Staging area?
It's a temporary area ,where we can stage the required files for commit so if you think still needs to changes in the code you can do it here.

what is local commit?
commit into local repository nothing but laptop. commit time will be logged, who commited will be logged, why they commited also will be logged

push to central/remote repo?

push to central repo..others can just run git pull(pull the changes from central to local repo

git clone vs git pull
=====================
clone -> first time downloading the code then we can use clone
pull -> if you did any changes in the same code and if you want to down load thenjust pull the changes

staging area -> git add <file-name> by using this command it will track your scripts in your local PC
AnjanaRajasekhar@DESKTOP-NQ5FK5B MINGW64 /c/devops/daws-86s/repos/Shell-Prac-Daws-86s (main)
$ git status
On branch main

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        helloworld.sh

nothing added to commit but untracked files present (use "git add" to track)

AnjanaRajasekhar@DESKTOP-NQ5FK5B MINGW64 /c/devops/daws-86s/repos/Shell-Prac-Daws-86s (main)
$ git add helloworld.sh
warning: in the working copy of 'helloworld.sh', LF will be replaced by CRLF the next time Git touches it


local commit -> git commit -m "first commit, hello world started"
The code is still in the local but what are the changes you are doing we can commit it which means its simply store what are your inital change and we can observe in git log.

push to central repo -> git push origin main
It will push the code from local repo(git bash )central repo (git hub).

steps followed till now
1. signup to github
2. install vs code
3. open folder in vs code where you store all repos
create repo in github
4. clone the repo
5. do some code
6. add to staging area
7. commit to local repo
8. push to central repo








